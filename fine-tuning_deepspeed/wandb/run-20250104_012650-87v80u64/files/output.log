[2025-01-04 01:26:51,570] [INFO] [comm.py:652:init_distributed] cdb=None
Loading checkpoint shards:   0%|                                                                                            | 0/3 [00:02<?, ?it/s]
[rank5]: Traceback (most recent call last):
[rank5]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 142, in <module>
[rank5]:     main()
[rank5]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 60, in main
[rank5]:     model, tokenizer, model_type = load_model_and_tokenizer(args.model_path, args.local_rank)
[rank5]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/model.py", line 61, in load_model_and_tokenizer
[rank5]:     model = AutoModelForCausalLM.from_pretrained(
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/models/auto/auto_factory.py", line 564, in from_pretrained
[rank5]:     return model_class.from_pretrained(
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4264, in from_pretrained
[rank5]:     ) = cls._load_pretrained_model(
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4777, in _load_pretrained_model
[rank5]:     new_error_msgs, offload_index, state_dict_index = _load_state_dict_into_meta_model(
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 942, in _load_state_dict_into_meta_model
[rank5]:     set_module_tensor_to_device(model, param_name, param_device, **set_module_kwargs)
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/accelerate/utils/modeling.py", line 329, in set_module_tensor_to_device
[rank5]:     new_value = value.to(device)
[rank5]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 64.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 9.81 MiB is free. Process 1679765 has 3.18 GiB memory in use. Process 1679770 has 3.16 GiB memory in use. Process 1679766 has 2.58 GiB memory in use. Process 1679764 has 3.10 GiB memory in use. Process 1679763 has 2.80 GiB memory in use. Process 1679767 has 2.80 GiB memory in use. Process 1679769 has 2.80 GiB memory in use. Including non-PyTorch memory, this process has 3.10 GiB memory in use. Of the allocated memory 2.85 GiB is allocated by PyTorch, and 1.91 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank5]: Traceback (most recent call last):
[rank5]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 142, in <module>
[rank5]:     main()
[rank5]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 60, in main
[rank5]:     model, tokenizer, model_type = load_model_and_tokenizer(args.model_path, args.local_rank)
[rank5]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/model.py", line 61, in load_model_and_tokenizer
[rank5]:     model = AutoModelForCausalLM.from_pretrained(
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/models/auto/auto_factory.py", line 564, in from_pretrained
[rank5]:     return model_class.from_pretrained(
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4264, in from_pretrained
[rank5]:     ) = cls._load_pretrained_model(
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4777, in _load_pretrained_model
[rank5]:     new_error_msgs, offload_index, state_dict_index = _load_state_dict_into_meta_model(
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 942, in _load_state_dict_into_meta_model
[rank5]:     set_module_tensor_to_device(model, param_name, param_device, **set_module_kwargs)
[rank5]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/accelerate/utils/modeling.py", line 329, in set_module_tensor_to_device
[rank5]:     new_value = value.to(device)
[rank5]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 64.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 9.81 MiB is free. Process 1679765 has 3.18 GiB memory in use. Process 1679770 has 3.16 GiB memory in use. Process 1679766 has 2.58 GiB memory in use. Process 1679764 has 3.10 GiB memory in use. Process 1679763 has 2.80 GiB memory in use. Process 1679767 has 2.80 GiB memory in use. Process 1679769 has 2.80 GiB memory in use. Including non-PyTorch memory, this process has 3.10 GiB memory in use. Of the allocated memory 2.85 GiB is allocated by PyTorch, and 1.91 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
