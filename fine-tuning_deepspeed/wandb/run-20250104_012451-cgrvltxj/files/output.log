[2025-01-04 01:24:52,241] [INFO] [comm.py:652:init_distributed] cdb=None
Loading checkpoint shards:   0%|                                                                                            | 0/3 [00:02<?, ?it/s]
[rank2]: Traceback (most recent call last):
[rank2]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 142, in <module>
[rank2]:     main()
[rank2]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 60, in main
[rank2]:     model, tokenizer, model_type = load_model_and_tokenizer(args.model_path, args.local_rank)
[rank2]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/model.py", line 44, in load_model_and_tokenizer
[rank2]:     model=AutoModelForCausalLM.from_pretrained(
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/models/auto/auto_factory.py", line 564, in from_pretrained
[rank2]:     return model_class.from_pretrained(
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4264, in from_pretrained
[rank2]:     ) = cls._load_pretrained_model(
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4777, in _load_pretrained_model
[rank2]:     new_error_msgs, offload_index, state_dict_index = _load_state_dict_into_meta_model(
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 942, in _load_state_dict_into_meta_model
[rank2]:     set_module_tensor_to_device(model, param_name, param_device, **set_module_kwargs)
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/accelerate/utils/modeling.py", line 329, in set_module_tensor_to_device
[rank2]:     new_value = value.to(device)
[rank2]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 64.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 57.81 MiB is free. Including non-PyTorch memory, this process has 3.10 GiB memory in use. Process 1673423 has 3.18 GiB memory in use. Process 1673420 has 2.29 GiB memory in use. Process 1673425 has 3.18 GiB memory in use. Process 1673421 has 3.18 GiB memory in use. Process 1673424 has 3.02 GiB memory in use. Process 1673426 has 3.18 GiB memory in use. Process 1673427 has 2.36 GiB memory in use. Of the allocated memory 2.85 GiB is allocated by PyTorch, and 1.91 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank2]: Traceback (most recent call last):
[rank2]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 142, in <module>
[rank2]:     main()
[rank2]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 60, in main
[rank2]:     model, tokenizer, model_type = load_model_and_tokenizer(args.model_path, args.local_rank)
[rank2]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/model.py", line 44, in load_model_and_tokenizer
[rank2]:     model=AutoModelForCausalLM.from_pretrained(
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/models/auto/auto_factory.py", line 564, in from_pretrained
[rank2]:     return model_class.from_pretrained(
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4264, in from_pretrained
[rank2]:     ) = cls._load_pretrained_model(
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4777, in _load_pretrained_model
[rank2]:     new_error_msgs, offload_index, state_dict_index = _load_state_dict_into_meta_model(
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 942, in _load_state_dict_into_meta_model
[rank2]:     set_module_tensor_to_device(model, param_name, param_device, **set_module_kwargs)
[rank2]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/accelerate/utils/modeling.py", line 329, in set_module_tensor_to_device
[rank2]:     new_value = value.to(device)
[rank2]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 64.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 57.81 MiB is free. Including non-PyTorch memory, this process has 3.10 GiB memory in use. Process 1673423 has 3.18 GiB memory in use. Process 1673420 has 2.29 GiB memory in use. Process 1673425 has 3.18 GiB memory in use. Process 1673421 has 3.18 GiB memory in use. Process 1673424 has 3.02 GiB memory in use. Process 1673426 has 3.18 GiB memory in use. Process 1673427 has 2.36 GiB memory in use. Of the allocated memory 2.85 GiB is allocated by PyTorch, and 1.91 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
