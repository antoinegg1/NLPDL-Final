Loading checkpoint shards:   0%|                                                                                            | 0/3 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 142, in <module>
    main()
  File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 60, in main
    model, tokenizer, model_type = load_model_and_tokenizer(args.model_path, args.local_rank)
  File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/model.py", line 36, in load_model_and_tokenizer
    model=AutoModelForCausalLM.from_pretrained(
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/models/auto/auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4264, in from_pretrained
    ) = cls._load_pretrained_model(
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4777, in _load_pretrained_model
    new_error_msgs, offload_index, state_dict_index = _load_state_dict_into_meta_model(
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 942, in _load_state_dict_into_meta_model
    set_module_tensor_to_device(model, param_name, param_device, **set_module_kwargs)
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/accelerate/utils/modeling.py", line 329, in set_module_tensor_to_device
    new_value = value.to(device)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 224.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 57.81 MiB is free. Process 1665044 has 3.18 GiB memory in use. Process 1665042 has 3.18 GiB memory in use. Process 1665043 has 3.18 GiB memory in use. Process 1665046 has 3.18 GiB memory in use. Including non-PyTorch memory, this process has 2.80 GiB memory in use. Process 1665041 has 3.04 GiB memory in use. Process 1665045 has 2.36 GiB memory in use. Process 1665047 has 2.58 GiB memory in use. Of the allocated memory 2.55 GiB is allocated by PyTorch, and 1.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Traceback (most recent call last):
  File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 142, in <module>
    main()
  File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/train.py", line 60, in main
    model, tokenizer, model_type = load_model_and_tokenizer(args.model_path, args.local_rank)
  File "/mnt/file2/changye/NLPFINAL/fine-tuning_deepspeed/model.py", line 36, in load_model_and_tokenizer
    model=AutoModelForCausalLM.from_pretrained(
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/models/auto/auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4264, in from_pretrained
    ) = cls._load_pretrained_model(
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4777, in _load_pretrained_model
    new_error_msgs, offload_index, state_dict_index = _load_state_dict_into_meta_model(
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 942, in _load_state_dict_into_meta_model
    set_module_tensor_to_device(model, param_name, param_device, **set_module_kwargs)
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/accelerate/utils/modeling.py", line 329, in set_module_tensor_to_device
    new_value = value.to(device)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 224.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 57.81 MiB is free. Process 1665044 has 3.18 GiB memory in use. Process 1665042 has 3.18 GiB memory in use. Process 1665043 has 3.18 GiB memory in use. Process 1665046 has 3.18 GiB memory in use. Including non-PyTorch memory, this process has 2.80 GiB memory in use. Process 1665041 has 3.04 GiB memory in use. Process 1665045 has 2.36 GiB memory in use. Process 1665047 has 2.58 GiB memory in use. Of the allocated memory 2.55 GiB is allocated by PyTorch, and 1.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
