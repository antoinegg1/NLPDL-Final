You are using the default legacy behaviour of the <class 'transformers.models.t5.tokenization_t5.T5Tokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565
Using 8 GPUs!
Epoch 1/3:   0%|                                                                                                    | 0/1810 [00:00<?, ?it/s]Passing a tuple of `past_key_values` is deprecated and will be removed in Transformers v4.48.0. You should pass an instance of `EncoderDecoderCache` instead, e.g. `past_key_values=EncoderDecoderCache.from_legacy_cache(past_key_values)`.
/home/changye/miniconda3/envs/sae/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
Epoch 1/3:   0%|                                                                                                    | 0/1810 [00:08<?, ?it/s]
Traceback (most recent call last):
  File "/mnt/file2/changye/NLPFINAL/pre-train.py", line 193, in <module>
    main()
  File "/mnt/file2/changye/NLPFINAL/pre-train.py", line 134, in main
    loss = outputs.loss.means()
AttributeError: 'Tensor' object has no attribute 'means'. Did you mean: 'mean'?
Traceback (most recent call last):
  File "/mnt/file2/changye/NLPFINAL/pre-train.py", line 193, in <module>
    main()
  File "/mnt/file2/changye/NLPFINAL/pre-train.py", line 134, in main
    loss = outputs.loss.means()
AttributeError: 'Tensor' object has no attribute 'means'. Did you mean: 'mean'?
