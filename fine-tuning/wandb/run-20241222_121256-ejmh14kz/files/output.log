训练集加载完成，共有 32000 个样本。
验证集加载完成，共有 4000 个样本。
Traceback (most recent call last):
  File "/mnt/file2/changye/NLPFINAL/fine-tuning/main.py", line 168, in <module>
    main(args)
  File "/mnt/file2/changye/NLPFINAL/fine-tuning/main.py", line 80, in main
    model, tokenizer, model_type = load_model_and_tokenizer(args.model_name_or_path)
  File "/mnt/file2/changye/NLPFINAL/fine-tuning/model.py", line 41, in load_model_and_tokenizer
    model.to(device)
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 3164, in to
    return super().to(*args, **kwargs)
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1340, in to
    return self._apply(convert)
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  [Previous line repeated 4 more times]
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 927, in _apply
    param_applied = fn(param)
  File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1326, in convert
    return t.to(
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 23.81 MiB is free. Process 90871 has 3.00 GiB memory in use. Including non-PyTorch memory, this process has 2.52 GiB memory in use. Process 90869 has 3.00 GiB memory in use. Process 90872 has 3.00 GiB memory in use. Process 90867 has 3.00 GiB memory in use. Process 90870 has 3.00 GiB memory in use. Process 90866 has 3.00 GiB memory in use. Process 90868 has 3.00 GiB memory in use. Of the allocated memory 2.27 GiB is allocated by PyTorch, and 1.61 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank0]: Traceback (most recent call last):
[rank0]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning/main.py", line 168, in <module>
[rank0]:     main(args)
[rank0]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning/main.py", line 80, in main
[rank0]:     model, tokenizer, model_type = load_model_and_tokenizer(args.model_name_or_path)
[rank0]:   File "/mnt/file2/changye/NLPFINAL/fine-tuning/model.py", line 41, in load_model_and_tokenizer
[rank0]:     model.to(device)
[rank0]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/transformers/modeling_utils.py", line 3164, in to
[rank0]:     return super().to(*args, **kwargs)
[rank0]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1340, in to
[rank0]:     return self._apply(convert)
[rank0]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
[rank0]:     module._apply(fn)
[rank0]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
[rank0]:     module._apply(fn)
[rank0]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
[rank0]:     module._apply(fn)
[rank0]:   [Previous line repeated 4 more times]
[rank0]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 927, in _apply
[rank0]:     param_applied = fn(param)
[rank0]:   File "/home/changye/miniconda3/envs/ML/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1326, in convert
[rank0]:     return t.to(
[rank0]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 23.81 MiB is free. Process 90871 has 3.00 GiB memory in use. Including non-PyTorch memory, this process has 2.52 GiB memory in use. Process 90869 has 3.00 GiB memory in use. Process 90872 has 3.00 GiB memory in use. Process 90867 has 3.00 GiB memory in use. Process 90870 has 3.00 GiB memory in use. Process 90866 has 3.00 GiB memory in use. Process 90868 has 3.00 GiB memory in use. Of the allocated memory 2.27 GiB is allocated by PyTorch, and 1.61 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
